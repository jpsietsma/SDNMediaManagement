@model SDNMediaModels.Television.TelevisionShow

@{
    SDNMediaModels.Television.TelevisionSeason seasonModel = new SDNMediaModels.Television.TelevisionSeason();

    string title;

    if (Model.Empty)
    {
        title = "Create New Season ";
        <h2>Create New Season</h2>
    }
    else
    {
        title = Model.ShowName + " - Add New Season ";
        <h2>@Model.ShowName - Create Season</h2>
    }

    ViewBag.Title = title;
}



@using (Html.BeginForm("SaveSeason", "Media"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Season Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(s => s.ShowName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{

                    List<SelectListItem> listItems = new List<SelectListItem>();

                    if (!string.IsNullOrEmpty(Model.ShowName))
                    {

                        listItems.Add(new SelectListItem
                        {
                            Text = Model.ShowName,
                            Value = Model.pk_ShowID.ToString()
                        });

                        listItems.OrderBy(o => o.Text);

                        @Html.DropDownListFor(Model => seasonModel.fk_ShowID, listItems)
                    }
                    else
                    {
                        listItems.Add(new SelectListItem { Text = @"[--- SELECT SHOW ---]", Value = "0", Selected = true, Disabled = true });

                        SDNMediaModels.DBContext.MediaManagerDB db = new SDNMediaModels.DBContext.MediaManagerDB();

                        var shows = db.TelevisionShows.ToList();

                        foreach (var show in shows)
                        {
                            listItems.Add(new SelectListItem { Text = show.ShowName, Value = show.pk_ShowID.ToString() });
                        }

                        listItems.OrderBy(o => o.Text);

                        @Html.DropDownListFor(Model => seasonModel.fk_ShowID, listItems, 0)
                    }

                }


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => seasonModel.SeasonName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => seasonModel.SeasonName, new { htmlAttributes = new { @class = "form-control", @disabled = "" } })
                @Html.ValidationMessageFor(model => seasonModel.SeasonName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => seasonModel.SeasonHomePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => seasonModel.SeasonHomePath, new { htmlAttributes = new { @class = "form-control", @disabled = "" } })
                @Html.ValidationMessageFor(model => seasonModel.SeasonHomePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => seasonModel.IsEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => seasonModel.IsEnabled, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => seasonModel.IsEnabled, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                <input type="submit" href="@Url.Action("Cancel", "~/Media/ShowInfo")" value="Cancel" class="btn btn-warning" />
                <input type="submit" value="Auto-Queue" class="btn btn-info" />
            </div>

        </div>

    </div>
}

<div>
    @Html.ActionLink("<< Back to Season List", "ShowInfo")
</div>
