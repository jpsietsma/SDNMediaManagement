
<nav class="navbar navbar-expand-lg navbar-dark navbar-fixed-top table-active table-bordered" style="margin-top: -50px;">
    <a class="navbar-brand text-lg-left" href="#" style="margin-right: 50px;">Sietsma Development Media v1.3 </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarColor02" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarColor02">
        @if (Request.IsAuthenticated)
        {
        <ul class="nav navbar-nav mr-auto">

            @if (!User.IsInRole("Pending"))
            {

                if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
                {
                    <li class="dropdown navbar-light" style="margin-right: 40px;">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            Reports
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu" role="menu">
                            <li class="nav-link">@Html.ActionLink("Overview", "Overview", "Reports")</li>
                            <li class="nav-link">@Html.ActionLink("Television", "TelevisionMaster", "Reports")</li>
                            <li class="nav-link">@Html.ActionLink("Movies", "MovieMaster", "Reports")</li>
                            <li class="nav-link">@Html.ActionLink("Download Duration", "DownloadDuration", "Report")</li>
                            <li class="nav-link">@Html.ActionLink("Storage Breakdown", "StorageBreakdown", "Report")</li>
                        </ul>
                    </li>
                }

                <li class="dropdown" style="margin-right: 40px;">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        Media
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu" role="menu">
                        <li class="nav-link">@Html.ActionLink("Television Shows", "ShowInfo", "Media")</li>
                    </ul>
                </li>

                if (User.IsInRole("Admin"))
                {
                    <li class="dropdown" style="margin-right: 40px;">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            Automation
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu" role="menu">
                            <li class="nav-link">@Html.ActionLink("Sort Queue", "GetContents", "Sort")</li>
                            <li class="nav-link">@Html.ActionLink("Settings", "AutomationSettings", "Sort")</li>
                        </ul>
                    </li>
                }

                <!-- if user is admin, show administration dropdown-->
                if (User.IsInRole("Admin"))
                {
                    <li class="dropdown" style="margin-right: 40px;">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            Administration
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu table-dark" role="menu" style="border: 1px solid black;">
                            <li class="nav-link">@Html.ActionLink("Dashboard", "Dashboard", "Admin")</li>
                            <li class="nav-link">@Html.ActionLink("User Accounts", "ManageUsers", "Admin")</li>
                            <li class="nav-link">@Html.ActionLink("Permissions", "Permissions", "Admin")</li>
                            <li class="nav-link">@Html.ActionLink("Storage Config", "MediaDrives", "Admin")</li>
                            <li class="nav-link">@Html.ActionLink("Download History", "GetDownloads", "Sort")</li>
                            <li class="nav-link">@Html.ActionLink("To-do List", "Tasks", "Feedback")</li>
                        </ul>
                    </li>
                }

                if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
                {
                    <li class="dropdown" style="margin-right: 40px;">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            Media Maintenance
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu" role="menu">
                            <li class="nav-link">@Html.ActionLink("Add Show", "CreateShow", "Media")</li>
                            <li class="nav-link">@Html.ActionLink("Add Season", "AddSeason", "Media")</li>
                            <li class="nav-link">@Html.ActionLink("Add Sort Item", "AddSortItem", "Media")</li>
                            <li class="nav-link">@Html.ActionLink("Scheduling", "AutomationTasks", "Media")</li>
                            <li class="nav-link">@Html.ActionLink("Scripts", "ScriptDashboard", "Media")</li>
                        </ul>
                    </li>

                    <li class="dropdown" style="margin-right: 40px;">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            Logs
                            <span class="caret"></span>
                        </a>
                        <ul class="dropdown-menu" role="menu">
                            <li class="nav-link">@Html.ActionLink("Error Logs", "ErrorLogs", "Logs")</li>
                            <li class="nav-link"><i class="fa fa-user"></i> @Html.ActionLink("User Activity", "UserLogs", "Logs")</li>
                            <li class="nav-link">@Html.ActionLink("Info Logs", "InfoLogs", "Logs")</li>
                            <li class="nav-link">@Html.ActionLink("Storage Logs", "StorageLogs", "Logs")</li>
                        </ul>
                    </li>
                }

                <li class="dropdown" style="margin-right: 40px;">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        Feedback
                        <span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu" role="menu">
                        <li class="nav-link">@Html.ActionLink("Request Media", "RequestMedia", "Feedback")</li>
                        <li class="nav-link">@Html.ActionLink("View Requests", "Requests", "Feedback")</li>
                    </ul>
                </li>

            }

            <li class="dropdown">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                    @User.Identity.Name
                    @if (User.IsInRole("Admin"))
                    {

                        <i class="fa fa-user" style="color: black;"></i>

                    }
                    else if (User.IsInRole("User"))
                    {

                        <i class="fa fa-user" style="color: white;"></i>

                    }
                    else if (User.IsInRole("Moderator"))
                    {

                        <i class="fa fa-user-alt" style="color: yellow;"></i>

                    }
                    else if (User.IsInRole("Pending"))
                    {

                        <i class="fa fa-question-circle" style="color: white;"></i>

                    }
                    <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                    <li class="nav-link">@Html.ActionLink("Manage Settings", "Manage", "Account")</li>
                    <li class="nav-link">@Html.ActionLink("My Dashboard", "UserDashboard", "Account")</li>
                    <li class="nav-link">@Html.ActionLink("Log Off", "LogOff", "Account")</li>
                </ul>
            </li>
        </ul>
            if (!User.IsInRole("Pending"))
            {
                var shows_db = new SDNMediaModels.DBContext.MediaManagerDB();

                var shows = shows_db.TelevisionShows.Where(y => y.IsEnabled).OrderBy(x => x.ShowName);

                List<string> shows_auto = new List<string>();

                foreach (SDNMediaModels.Television.TelevisionShow show in shows)
                {
                    shows_auto.Add(show.ShowName);
                }


                @(Html.Kendo().AutoComplete()
                                                        .Name("autocomplete_shows")
                                                        .Filter("contains")
                                                        .MinLength(2)
                                                        .HtmlAttributes(new { @style = "width: 300px; margin-right: 5px;" })
                                                        .AutoWidth(true)
                                                        .Placeholder("Search Shows...")
                                                        .BindTo(shows_auto)
                                                        .Height(400)
                                                        .Template("<span class=\"k-state-default\" style=\"background-image: url(" + Url.Content("~/Content/web/Customers/") +
                                                                  "#:data.CustomerID#.jpg" +
                                                                  ");\" ></span>" +
                                                                  "<span class=\"k-state-default\"><h5><i class='fas fa-tv'> </i>#: data #</h5><p>#: data.ShowNumSeasons # - Seasons / #: data.ShowNumEpisodes # - Episodes</p></span>")
                                                        .FooterTemplate("Total <strong>#: instance.dataSource.total() #</strong> items found")
                );


                <button class="btn btn-light my-2 my-sm-0" type="submit">Search</button>

            }
        }
        else
        {

            @(Html.ActionLink("Log In", "Login", "Account"));

        }
    </div>
</nav>